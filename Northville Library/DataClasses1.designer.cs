#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northville_Library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Northville")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVisitLog(VisitLog instance);
    partial void UpdateVisitLog(VisitLog instance);
    partial void DeleteVisitLog(VisitLog instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertFine(Fine instance);
    partial void UpdateFine(Fine instance);
    partial void DeleteFine(Fine instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Northville_Library.Properties.Settings.Default.NorthvilleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VisitLog> VisitLogs
		{
			get
			{
				return this.GetTable<VisitLog>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Fine> Fines
		{
			get
			{
				return this.GetTable<Fine>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitLog")]
	public partial class VisitLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Visit_ID;
		
		private string _Student_ID;
		
		private System.DateTime _Visit_DateTime;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisit_IDChanging(string value);
    partial void OnVisit_IDChanged();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnVisit_DateTimeChanging(System.DateTime value);
    partial void OnVisit_DateTimeChanged();
    #endregion
		
		public VisitLog()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visit_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Visit_ID
		{
			get
			{
				return this._Visit_ID;
			}
			set
			{
				if ((this._Visit_ID != value))
				{
					this.OnVisit_IDChanging(value);
					this.SendPropertyChanging();
					this._Visit_ID = value;
					this.SendPropertyChanged("Visit_ID");
					this.OnVisit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visit_DateTime", DbType="Date NOT NULL")]
		public System.DateTime Visit_DateTime
		{
			get
			{
				return this._Visit_DateTime;
			}
			set
			{
				if ((this._Visit_DateTime != value))
				{
					this.OnVisit_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Visit_DateTime = value;
					this.SendPropertyChanged("Visit_DateTime");
					this.OnVisit_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_VisitLog", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.VisitLogs.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.VisitLogs.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Book_ID;
		
		private string _Book_Title;
		
		private string _Book_Author;
		
		private string _Book_ISBN;
		
		private System.DateTime _Book_PublicationDate;
		
		private string _Book_Genre;
		
		private System.Nullable<int> _Book_Quantity;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBook_IDChanging(string value);
    partial void OnBook_IDChanged();
    partial void OnBook_TitleChanging(string value);
    partial void OnBook_TitleChanged();
    partial void OnBook_AuthorChanging(string value);
    partial void OnBook_AuthorChanged();
    partial void OnBook_ISBNChanging(string value);
    partial void OnBook_ISBNChanged();
    partial void OnBook_PublicationDateChanging(System.DateTime value);
    partial void OnBook_PublicationDateChanged();
    partial void OnBook_GenreChanging(string value);
    partial void OnBook_GenreChanged();
    partial void OnBook_QuantityChanging(System.Nullable<int> value);
    partial void OnBook_QuantityChanged();
    #endregion
		
		public Book()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Book_ID
		{
			get
			{
				return this._Book_ID;
			}
			set
			{
				if ((this._Book_ID != value))
				{
					this.OnBook_IDChanging(value);
					this.SendPropertyChanging();
					this._Book_ID = value;
					this.SendPropertyChanged("Book_ID");
					this.OnBook_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Title
		{
			get
			{
				return this._Book_Title;
			}
			set
			{
				if ((this._Book_Title != value))
				{
					this.OnBook_TitleChanging(value);
					this.SendPropertyChanging();
					this._Book_Title = value;
					this.SendPropertyChanged("Book_Title");
					this.OnBook_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Author", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Author
		{
			get
			{
				return this._Book_Author;
			}
			set
			{
				if ((this._Book_Author != value))
				{
					this.OnBook_AuthorChanging(value);
					this.SendPropertyChanging();
					this._Book_Author = value;
					this.SendPropertyChanged("Book_Author");
					this.OnBook_AuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ISBN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_ISBN
		{
			get
			{
				return this._Book_ISBN;
			}
			set
			{
				if ((this._Book_ISBN != value))
				{
					this.OnBook_ISBNChanging(value);
					this.SendPropertyChanging();
					this._Book_ISBN = value;
					this.SendPropertyChanged("Book_ISBN");
					this.OnBook_ISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_PublicationDate", DbType="Date NOT NULL")]
		public System.DateTime Book_PublicationDate
		{
			get
			{
				return this._Book_PublicationDate;
			}
			set
			{
				if ((this._Book_PublicationDate != value))
				{
					this.OnBook_PublicationDateChanging(value);
					this.SendPropertyChanging();
					this._Book_PublicationDate = value;
					this.SendPropertyChanged("Book_PublicationDate");
					this.OnBook_PublicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Genre", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Book_Genre
		{
			get
			{
				return this._Book_Genre;
			}
			set
			{
				if ((this._Book_Genre != value))
				{
					this.OnBook_GenreChanging(value);
					this.SendPropertyChanging();
					this._Book_Genre = value;
					this.SendPropertyChanged("Book_Genre");
					this.OnBook_GenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Quantity", DbType="Int")]
		public System.Nullable<int> Book_Quantity
		{
			get
			{
				return this._Book_Quantity;
			}
			set
			{
				if ((this._Book_Quantity != value))
				{
					this.OnBook_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Book_Quantity = value;
					this.SendPropertyChanged("Book_Quantity");
					this.OnBook_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Transaction", Storage="_Transactions", ThisKey="Book_ID", OtherKey="Book_ID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Course_ID;
		
		private string _Course_Name;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(string value);
    partial void OnCourse_IDChanged();
    partial void OnCourse_NameChanging(string value);
    partial void OnCourse_NameChanged();
    #endregion
		
		public Course()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_Name
		{
			get
			{
				return this._Course_Name;
			}
			set
			{
				if ((this._Course_Name != value))
				{
					this.OnCourse_NameChanging(value);
					this.SendPropertyChanging();
					this._Course_Name = value;
					this.SendPropertyChanged("Course_Name");
					this.OnCourse_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Students", ThisKey="Course_ID", OtherKey="Course_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fines")]
	public partial class Fine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Fines_ID;
		
		private string _Transaction_ID;
		
		private int _Fine_Amount;
		
		private System.Nullable<int> _Days_Overdue;
		
		private string _Fines_Status;
		
		private EntityRef<Transaction> _Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFines_IDChanging(string value);
    partial void OnFines_IDChanged();
    partial void OnTransaction_IDChanging(string value);
    partial void OnTransaction_IDChanged();
    partial void OnFine_AmountChanging(int value);
    partial void OnFine_AmountChanged();
    partial void OnDays_OverdueChanging(System.Nullable<int> value);
    partial void OnDays_OverdueChanged();
    partial void OnFines_StatusChanging(string value);
    partial void OnFines_StatusChanged();
    #endregion
		
		public Fine()
		{
			this._Transaction = default(EntityRef<Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fines_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Fines_ID
		{
			get
			{
				return this._Fines_ID;
			}
			set
			{
				if ((this._Fines_ID != value))
				{
					this.OnFines_IDChanging(value);
					this.SendPropertyChanging();
					this._Fines_ID = value;
					this.SendPropertyChanged("Fines_ID");
					this.OnFines_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Transaction_ID
		{
			get
			{
				return this._Transaction_ID;
			}
			set
			{
				if ((this._Transaction_ID != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransaction_IDChanging(value);
					this.SendPropertyChanging();
					this._Transaction_ID = value;
					this.SendPropertyChanged("Transaction_ID");
					this.OnTransaction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fine_Amount", DbType="Int NOT NULL")]
		public int Fine_Amount
		{
			get
			{
				return this._Fine_Amount;
			}
			set
			{
				if ((this._Fine_Amount != value))
				{
					this.OnFine_AmountChanging(value);
					this.SendPropertyChanging();
					this._Fine_Amount = value;
					this.SendPropertyChanged("Fine_Amount");
					this.OnFine_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days_Overdue", DbType="Int")]
		public System.Nullable<int> Days_Overdue
		{
			get
			{
				return this._Days_Overdue;
			}
			set
			{
				if ((this._Days_Overdue != value))
				{
					this.OnDays_OverdueChanging(value);
					this.SendPropertyChanging();
					this._Days_Overdue = value;
					this.SendPropertyChanged("Days_Overdue");
					this.OnDays_OverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fines_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Fines_Status
		{
			get
			{
				return this._Fines_Status;
			}
			set
			{
				if ((this._Fines_Status != value))
				{
					this.OnFines_StatusChanging(value);
					this.SendPropertyChanging();
					this._Fines_Status = value;
					this.SendPropertyChanged("Fines_Status");
					this.OnFines_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Fine", Storage="_Transaction", ThisKey="Transaction_ID", OtherKey="Transaction_ID", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.Fines.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.Fines.Add(this);
						this._Transaction_ID = value.Transaction_ID;
					}
					else
					{
						this._Transaction_ID = default(string);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Role_ID;
		
		private string _Role_Name;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(string value);
    partial void OnRole_IDChanged();
    partial void OnRole_NameChanging(string value);
    partial void OnRole_NameChanged();
    #endregion
		
		public Role()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Name", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this.OnRole_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Name = value;
					this.SendPropertyChanged("Role_Name");
					this.OnRole_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Staff", Storage="_Staffs", ThisKey="Role_ID", OtherKey="Role_ID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Student", Storage="_Students", ThisKey="Role_ID", OtherKey="Role_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Staff_ID;
		
		private string _Role_ID;
		
		private string _Staff_FirstName;
		
		private string _Staff_LastName;
		
		private string _Staff_Password;
		
		private string _Staff_ContactNum;
		
		private string _Staff_Email;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnRole_IDChanging(string value);
    partial void OnRole_IDChanged();
    partial void OnStaff_FirstNameChanging(string value);
    partial void OnStaff_FirstNameChanged();
    partial void OnStaff_LastNameChanging(string value);
    partial void OnStaff_LastNameChanged();
    partial void OnStaff_PasswordChanging(string value);
    partial void OnStaff_PasswordChanged();
    partial void OnStaff_ContactNumChanging(string value);
    partial void OnStaff_ContactNumChanged();
    partial void OnStaff_EmailChanging(string value);
    partial void OnStaff_EmailChanged();
    #endregion
		
		public Staff()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_FirstName
		{
			get
			{
				return this._Staff_FirstName;
			}
			set
			{
				if ((this._Staff_FirstName != value))
				{
					this.OnStaff_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Staff_FirstName = value;
					this.SendPropertyChanged("Staff_FirstName");
					this.OnStaff_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_LastName
		{
			get
			{
				return this._Staff_LastName;
			}
			set
			{
				if ((this._Staff_LastName != value))
				{
					this.OnStaff_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Staff_LastName = value;
					this.SendPropertyChanged("Staff_LastName");
					this.OnStaff_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Staff_Password
		{
			get
			{
				return this._Staff_Password;
			}
			set
			{
				if ((this._Staff_Password != value))
				{
					this.OnStaff_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Staff_Password = value;
					this.SendPropertyChanged("Staff_Password");
					this.OnStaff_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ContactNum", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Staff_ContactNum
		{
			get
			{
				return this._Staff_ContactNum;
			}
			set
			{
				if ((this._Staff_ContactNum != value))
				{
					this.OnStaff_ContactNumChanging(value);
					this.SendPropertyChanging();
					this._Staff_ContactNum = value;
					this.SendPropertyChanged("Staff_ContactNum");
					this.OnStaff_ContactNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Email", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Staff_Email
		{
			get
			{
				return this._Staff_Email;
			}
			set
			{
				if ((this._Staff_Email != value))
				{
					this.OnStaff_EmailChanging(value);
					this.SendPropertyChanging();
					this._Staff_Email = value;
					this.SendPropertyChanged("Staff_Email");
					this.OnStaff_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Staff", Storage="_Role", ThisKey="Role_ID", OtherKey="Role_ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._Role_ID = value.Role_ID;
					}
					else
					{
						this._Role_ID = default(string);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Student_ID;
		
		private string _Student_FirstName;
		
		private string _Student_LastName;
		
		private string _Student_Password;
		
		private string _Student_ContactNum;
		
		private string _Student_Email;
		
		private string _Course_ID;
		
		private string _Role_ID;
		
		private EntitySet<VisitLog> _VisitLogs;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnStudent_FirstNameChanging(string value);
    partial void OnStudent_FirstNameChanged();
    partial void OnStudent_LastNameChanging(string value);
    partial void OnStudent_LastNameChanged();
    partial void OnStudent_PasswordChanging(string value);
    partial void OnStudent_PasswordChanged();
    partial void OnStudent_ContactNumChanging(string value);
    partial void OnStudent_ContactNumChanged();
    partial void OnStudent_EmailChanging(string value);
    partial void OnStudent_EmailChanged();
    partial void OnCourse_IDChanging(string value);
    partial void OnCourse_IDChanged();
    partial void OnRole_IDChanging(string value);
    partial void OnRole_IDChanged();
    #endregion
		
		public Student()
		{
			this._VisitLogs = new EntitySet<VisitLog>(new Action<VisitLog>(this.attach_VisitLogs), new Action<VisitLog>(this.detach_VisitLogs));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Course = default(EntityRef<Course>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_FirstName
		{
			get
			{
				return this._Student_FirstName;
			}
			set
			{
				if ((this._Student_FirstName != value))
				{
					this.OnStudent_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Student_FirstName = value;
					this.SendPropertyChanged("Student_FirstName");
					this.OnStudent_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_LastName
		{
			get
			{
				return this._Student_LastName;
			}
			set
			{
				if ((this._Student_LastName != value))
				{
					this.OnStudent_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Student_LastName = value;
					this.SendPropertyChanged("Student_LastName");
					this.OnStudent_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Student_Password
		{
			get
			{
				return this._Student_Password;
			}
			set
			{
				if ((this._Student_Password != value))
				{
					this.OnStudent_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Student_Password = value;
					this.SendPropertyChanged("Student_Password");
					this.OnStudent_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactNum", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Student_ContactNum
		{
			get
			{
				return this._Student_ContactNum;
			}
			set
			{
				if ((this._Student_ContactNum != value))
				{
					this.OnStudent_ContactNumChanging(value);
					this.SendPropertyChanging();
					this._Student_ContactNum = value;
					this.SendPropertyChanged("Student_ContactNum");
					this.OnStudent_ContactNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this.OnStudent_EmailChanging(value);
					this.SendPropertyChanging();
					this._Student_Email = value;
					this.SendPropertyChanged("Student_Email");
					this.OnStudent_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_VisitLog", Storage="_VisitLogs", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<VisitLog> VisitLogs
		{
			get
			{
				return this._VisitLogs;
			}
			set
			{
				this._VisitLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Transaction", Storage="_Transactions", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Course", ThisKey="Course_ID", OtherKey="Course_ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Course_ID = value.Course_ID;
					}
					else
					{
						this._Course_ID = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Student", Storage="_Role", ThisKey="Role_ID", OtherKey="Role_ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Role_ID = value.Role_ID;
					}
					else
					{
						this._Role_ID = default(string);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VisitLogs(VisitLog entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_VisitLogs(VisitLog entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Transaction_ID;
		
		private string _Student_ID;
		
		private string _Book_ID;
		
		private System.DateTime _Borrow_Date;
		
		private System.DateTime _Due_Date;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private string _Transaction_Status;
		
		private EntitySet<Fine> _Fines;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransaction_IDChanging(string value);
    partial void OnTransaction_IDChanged();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnBook_IDChanging(string value);
    partial void OnBook_IDChanged();
    partial void OnBorrow_DateChanging(System.DateTime value);
    partial void OnBorrow_DateChanged();
    partial void OnDue_DateChanging(System.DateTime value);
    partial void OnDue_DateChanged();
    partial void OnReturn_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturn_DateChanged();
    partial void OnTransaction_StatusChanging(string value);
    partial void OnTransaction_StatusChanged();
    #endregion
		
		public Transaction()
		{
			this._Fines = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines), new Action<Fine>(this.detach_Fines));
			this._Book = default(EntityRef<Book>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Transaction_ID
		{
			get
			{
				return this._Transaction_ID;
			}
			set
			{
				if ((this._Transaction_ID != value))
				{
					this.OnTransaction_IDChanging(value);
					this.SendPropertyChanging();
					this._Transaction_ID = value;
					this.SendPropertyChanged("Transaction_ID");
					this.OnTransaction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Book_ID
		{
			get
			{
				return this._Book_ID;
			}
			set
			{
				if ((this._Book_ID != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBook_IDChanging(value);
					this.SendPropertyChanging();
					this._Book_ID = value;
					this.SendPropertyChanged("Book_ID");
					this.OnBook_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrow_Date", DbType="Date NOT NULL")]
		public System.DateTime Borrow_Date
		{
			get
			{
				return this._Borrow_Date;
			}
			set
			{
				if ((this._Borrow_Date != value))
				{
					this.OnBorrow_DateChanging(value);
					this.SendPropertyChanging();
					this._Borrow_Date = value;
					this.SendPropertyChanged("Borrow_Date");
					this.OnBorrow_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due_Date", DbType="Date NOT NULL")]
		public System.DateTime Due_Date
		{
			get
			{
				return this._Due_Date;
			}
			set
			{
				if ((this._Due_Date != value))
				{
					this.OnDue_DateChanging(value);
					this.SendPropertyChanging();
					this._Due_Date = value;
					this.SendPropertyChanged("Due_Date");
					this.OnDue_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this.OnReturn_DateChanging(value);
					this.SendPropertyChanging();
					this._Return_Date = value;
					this.SendPropertyChanged("Return_Date");
					this.OnReturn_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Status", DbType="NVarChar(20)")]
		public string Transaction_Status
		{
			get
			{
				return this._Transaction_Status;
			}
			set
			{
				if ((this._Transaction_Status != value))
				{
					this.OnTransaction_StatusChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Status = value;
					this.SendPropertyChanged("Transaction_Status");
					this.OnTransaction_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Fine", Storage="_Fines", ThisKey="Transaction_ID", OtherKey="Transaction_ID")]
		public EntitySet<Fine> Fines
		{
			get
			{
				return this._Fines;
			}
			set
			{
				this._Fines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Transaction", Storage="_Book", ThisKey="Book_ID", OtherKey="Book_ID", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._Book_ID = value.Book_ID;
					}
					else
					{
						this._Book_ID = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Transaction", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
	}
}
#pragma warning restore 1591
